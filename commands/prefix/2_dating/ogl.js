const { PermissionsBitField, EmbedBuilder } = require('discord.js');
const Announcements = require('../../../database/models/Announcements.js');

module.exports = {
	name: 'ogl',
	execute: async (client, msg, args) => {
		if (!msg.member.permissions.has(PermissionsBitField.Flags.ManageMessages)) return msg.reply('<a:error:1127481079620718635> Nie posiadasz uprawnie≈Ñ **ZarzƒÖdzanie wiadomo≈õciami**.');

		if (!args[0] || !args[1]) return msg.reply(`<a:error:1127481079620718635> **Oczekiwano argument√≥w**\n> **${process.env.PREFIX}ogl** <add/remove> <id> <reason>`);

		const data = await Announcements.findById(args[1]).catch(err => msg.reply(`<a:error:1127481079620718635> **Podane ID jest b≈Çƒôdne**\n\`\`\`js\n${err.message}\`\`\``));
		if (!data) return msg.reply('<a:error:1127481079620718635> **Dane w bazie nie zosta≈Çy odnalezione**');

		const author = msg.guild.members.cache.get(data.authorId);
		if (!author) return msg.reply('<a:error:1127481079620718635> **Autor nie zosta≈Ç odnaleziony**');

		if (data.status !== 201) return msg.reply(`<a:error:1127481079620718635> **Og≈Çoszenie ${author.user.username} zosta≈Ço ju≈º sprawdzone**`);

		const review = msg.guild.channels.cache.get(process.env.CH_FORMULARZE);
		if (!review) return msg.reply('<a:error:1127481079620718635> **Kana≈Ç „Äéüíó„Äèdo-sprawdzenia nie zosta≈Ç odnaleziony**');

		const reviewMsg = await review.messages.fetch(data.discord.reviewId);
		if (!reviewMsg) return msg.reply('<a:error:1127481079620718635> **Wymagana wiadomo≈õƒá na kanale „Äéüíó„Äèdo-sprawdzenia nie zosta≈Ça odnaleziona**');

		// Delete message
		msg.delete();

		// Add
		if (args[0].toLowerCase() === 'add') {
			const annMsg = await msg.guild.channels.cache.get(process.env.CH_OGLOSZENIA_RANDKI).send({
				content: `**[${author.user}]**`,
				embeds: [
					new EmbedBuilder()
						.setColor('#0078FF')
						.setAuthor({ name: `Og≈Çoszenie u≈ºytkownika ${author.user.tag}`, iconURL: msg.guild.iconURL() })
						.addFields([
							{ name: 'üíó ¬ª Szukam', value: data.announcement.type },
							{ name: 'üìù ¬ª Opis', value: data.announcement.bio },
							{ name: '‚úçÔ∏è ¬ª Tre≈õƒá og≈Çoszenia', value: data.announcement.desc },
						])
						.setImage(data.announcement.img)
						.setThumbnail(author.displayAvatarURL())
						.setTimestamp()
						.setFooter({ text: `ID: ${data.id} ‚Ä¢ Wersja: ${client.version}`, iconURL: client.user.displayAvatarURL() })],
			});

			await annMsg.react('‚ù§');
			await annMsg.startThread({ name: `Skomentuj og≈Çoszenie od ${author.user.username}`, autoArchiveDuration: 4320 });
			await data.updateOne({ status: 200, adminId: msg.author.id, 'discord.messageId': annMsg.id });

			author.send({ embeds: [
				new EmbedBuilder()
					.setColor('#00D26A')
					.setAuthor({ name: 'Twoje og≈Çoszenie zosta≈Ço zatwierdzone', iconURL: msg.guild.iconURL() })
					.setDescription(`Przychodzƒô do Ciebie z dobrƒÖ informacjƒÖ! Twoje og≈Çoszenie zosta≈Ço zatwierdzone przez jednego cz≈Çonka z naszej ekipy o nazwie **${msg.author.username}**. Serdecznie dziƒôkujemy i ≈ºyczymy powodzenia w szukaniu!\n\n> Kliknij [tutaj](${annMsg.url}), aby skoczyƒá do wiadomo≈õci.`)
					.setThumbnail(author.displayAvatarURL())],
			});

			try {
				await reviewMsg.react('1127457986697240698');
			} catch (err) {
				console.warn('Server ¬ª Reakcja \'add\' nie zosta≈Ça dodana do wiadomo≈õci.', err.message);
			}

			return msg.channel.send({ embeds: [
				new EmbedBuilder()
					.setColor('#00D26A')
					.setAuthor({ name: `‚úîÔ∏èÔ∏è Zatwierdzono og≈Çoszenie od ${author.user.username}`, iconURL: msg.author.displayAvatarURL() })
					.setDescription(`[[Skocz do wiadomo≈õci]](${annMsg.url})`)
					.setThumbnail(author.user.displayAvatarURL())
					.setFooter({ text: `${msg.author.tag} ‚Ä¢ ID: ${data.id}` })],
			});
		}

		// Discard
		if (args[0].toLowerCase() === 'discard') {
			try {
				await reviewMsg.react('1127457937678409789');
			} catch (err) {
				console.warn('Server ¬ª Reakcja \'discard\' nie zosta≈Ça dodana do wiadomo≈õci.', err.message);
			}

			const reason = args.slice(2).join(' ') || false;
			await data.updateOne({ status: 500, adminId: msg.author.id, canceledStr: reason });

			author.send({ embeds: [
				new EmbedBuilder()
					.setColor('#FFCC00')
					.setAuthor({ name: 'Twoje og≈Çoszenie nie zosta≈Ço przyjƒôte', iconURL: msg.guild.iconURL() })
					.setDescription(`Przepraszamy, lecz niestety nie mo≈ºemy zaakceptowaƒá Twojego og≈Çoszenia. Odrzuci≈Ç je administrator **${msg.author.username}**. Poni≈ºej znajdziesz pow√≥d. Je≈ºeli masz jakie≈õ pytania - ≈õmia≈Ço pytaj.\n\n\`\`\`${reason || 'Pow√≥d nie zosta≈Ç podany.'}\`\`\`  `)
					.setThumbnail(author.displayAvatarURL())],
			});

			return msg.channel.send({ embeds: [
				new EmbedBuilder()
					.setColor('#003CFF')
					.setAuthor({ name: `‚ùå Anulowano og≈Çoszenie od ${author.user.username}`, iconURL: msg.author.displayAvatarURL() })
					.addFields([{ name: '¬ª Pow√≥d odrzucenia', value: reason }])
					.setThumbnail(author.user.displayAvatarURL())
					.setFooter({ text: `${msg.author.tag} ‚Ä¢ ID: ${data.id}` })],
			});
		}

		msg.reply('<a:error:1127481079620718635> **Pomylono jaki≈õ argument**');
	},
};